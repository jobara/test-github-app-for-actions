name: Merge Release

on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to merge into'
        required: false
        type: string
        default: main
      tag:
        description: 'Tag to merge'
        required: true
        type: string

jobs:
  merge-release:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      GIT_USER_EMAIL: "github-actions[bot]@users.noreply.github.com"
      GIT_USER_NAME: "github-actions[bot]"
    permissions:
      contents: write
    strategy:
      fail-fast: true

    name: Merge tag

    steps:
    - name: Determine branch
      run: |
        echo 'BRANCH='${{ inputs.branch || 'main' }} >> $GITHUB_ENV

    - name: Checkout "${{ env.BRANCH }}" branch locally
      uses: actions/checkout@v4
      with:
        ref: ${{ env.BRANCH }}
        fetch-tags: true
        fetch-depth: 0

    - name: Update values for git user config
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        # fetch user info
        user=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /user/$ACCOUNT_ID )

        # get user's name and email
        # email will be set to null if it is private
        name=$(echo $user | jq '.name')
        email=$(echo $user | jq '.email')

        # store in environment variables to use for setting up git user
        echo "GIT_USER_NAME=$name" >> $GITHUB_ENV
        echo "GIT_USER_EMAIL=$email" >> $GITHUB_ENV
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ACCOUNT_ID: ${{ github.actor_id }}

    - name: Merge tag to local "${{ env.BRANCH }}" branch
      run: |
          git config --local user.email "$GIT_USER_EMAIL"
          git config --local user.name "$GIT_USER_NAME"
          git merge ${{ inputs.tag || github.event.release.tag_name }}

    - name: Push merge to repository's "${{ env.BRANCH }}" branch
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ env.BRANCH }}
